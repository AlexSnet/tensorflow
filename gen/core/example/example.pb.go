// Code generated by protoc-gen-go.
// source: tensorflow/core/example/example.proto
// DO NOT EDIT!

/*
Package tensorflow is a generated protocol buffer package.

It is generated from these files:
	tensorflow/core/example/example.proto
	tensorflow/core/example/feature.proto

It has these top-level messages:
	Example
	SequenceExample
	InferenceExample
	BytesList
	FloatList
	Int64List
	Feature
	Features
	FeatureList
	FeatureLists
*/
package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Example struct {
	Features *Features `protobuf:"bytes,1,opt,name=features" json:"features,omitempty"`
}

func (m *Example) Reset()                    { *m = Example{} }
func (m *Example) String() string            { return proto.CompactTextString(m) }
func (*Example) ProtoMessage()               {}
func (*Example) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Example) GetFeatures() *Features {
	if m != nil {
		return m.Features
	}
	return nil
}

type SequenceExample struct {
	Context      *Features     `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	FeatureLists *FeatureLists `protobuf:"bytes,2,opt,name=feature_lists" json:"feature_lists,omitempty"`
}

func (m *SequenceExample) Reset()                    { *m = SequenceExample{} }
func (m *SequenceExample) String() string            { return proto.CompactTextString(m) }
func (*SequenceExample) ProtoMessage()               {}
func (*SequenceExample) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SequenceExample) GetContext() *Features {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *SequenceExample) GetFeatureLists() *FeatureLists {
	if m != nil {
		return m.FeatureLists
	}
	return nil
}

type InferenceExample struct {
	Context  *Features   `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Features []*Features `protobuf:"bytes,2,rep,name=features" json:"features,omitempty"`
}

func (m *InferenceExample) Reset()                    { *m = InferenceExample{} }
func (m *InferenceExample) String() string            { return proto.CompactTextString(m) }
func (*InferenceExample) ProtoMessage()               {}
func (*InferenceExample) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InferenceExample) GetContext() *Features {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *InferenceExample) GetFeatures() []*Features {
	if m != nil {
		return m.Features
	}
	return nil
}

func init() {
	proto.RegisterType((*Example)(nil), "tensorflow.Example")
	proto.RegisterType((*SequenceExample)(nil), "tensorflow.SequenceExample")
	proto.RegisterType((*InferenceExample)(nil), "tensorflow.InferenceExample")
}

var fileDescriptor0 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0x2d, 0x49, 0xcd, 0x2b,
	0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0xd7, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x4f, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x81, 0xd3, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x5c, 0x08, 0x65, 0x52, 0x38,
	0xb5, 0xa4, 0xa5, 0x26, 0x96, 0x94, 0x16, 0x41, 0xb5, 0x28, 0x19, 0x72, 0xb1, 0xbb, 0x42, 0x24,
	0x84, 0xd4, 0xb8, 0x38, 0xa0, 0x72, 0xc5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x22, 0x7a,
	0x08, 0x43, 0xf4, 0xdc, 0xa0, 0x72, 0x4a, 0x99, 0x5c, 0xfc, 0xc1, 0xa9, 0x85, 0xa5, 0xa9, 0x79,
	0xc9, 0xa9, 0x30, 0xad, 0xaa, 0x5c, 0xec, 0xc9, 0xf9, 0x79, 0x25, 0xa9, 0x15, 0x25, 0xf8, 0x74,
	0x0a, 0xe9, 0x73, 0xf1, 0x42, 0x6d, 0x88, 0xcf, 0xc9, 0x2c, 0x2e, 0x29, 0x96, 0x60, 0x02, 0x2b,
	0x96, 0xc0, 0xa2, 0xd8, 0x07, 0x24, 0xaf, 0x94, 0xc8, 0x25, 0xe0, 0x99, 0x97, 0x96, 0x5a, 0x44,
	0x86, 0x5d, 0xc8, 0xbe, 0x61, 0x52, 0x60, 0xc6, 0xa5, 0xce, 0x49, 0x8a, 0x4b, 0x2c, 0xbf, 0x28,
	0x1d, 0x59, 0x0a, 0x1a, 0x50, 0x01, 0x8c, 0x49, 0x6c, 0xe0, 0x30, 0x32, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x6e, 0x86, 0x6e, 0x40, 0x7f, 0x01, 0x00, 0x00,
}
